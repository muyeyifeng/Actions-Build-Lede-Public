#
# This is free software, lisence use MIT.
# 

name: OpenWrt-CI-ALL_IN_ONE

on:
  push:
    branches: 
      - main
    paths-ignore:
      - "*.md"
      - "md5"
      - ".github/workflows/openwrt-ci-aarch64-rpi-x64-debug.yml"
  schedule:
    - cron: 30 18 * * 0/3

env:
  action_state: run
  GITHUB_EMAIL: muyeyifeng@gmail.com	#email
  GITHUB_USER: muyeyifeng

jobs:

  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        db-backend: [rpi2-3-4, rpi364, rpi464, aarch64, x64]	# rpi2-3-4

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: main
          fetch-depth: 1000000

      - name: Clone source code
        run:  |
          git clone  https://github.com/coolsnowwolf/lede

      - name: Show Last md5
        run:  |
          cat md5 | tail -n 1 |awk '{print $1}'

      - name: Check MD5
        run:  |
          cd lede
          git log -1 --format=%cd
          echo -n "$(git log -1 --format=%cd)" |md5sum
          echo -n "$(git log -1 --format=%cd)" |md5sum > tmpmd5
          if [[ "$(cat ../md5 | tail -n 1 |awk '{print $1}')" == "$(cat tmpmd5| tail -n 1 |awk '{print $1}')" ]]; then
                  echo "action_state=cancel" >> $GITHUB_ENV
          else
                  echo -n "$(git log -1 --format=%cd)" |md5sum >> ../md5
          fi

      - name: Check env
        run: |
          echo ${{ env.action_state }}
          echo ${{ github.event_name }}
          echo [ '${{ env.action_state }}' == 'run' ]
          echo [ '{{ github.event_name }}' == 'push' ]
          echo [ '${{ env.action_state }}' == 'run' || '${{ github.event_name }}'=='push' ]

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        if: env.action_state == 'run' || ${{ github.event_name }}=='push'
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get upgrade -y
          #==================================
          echo "$(cat ./lede/README.md |grep 'sudo apt-get' | sed -n 2p)"
          $(cat ./lede/README.md |grep "sudo apt-get" | sed -n 2p)
          sudo -E apt-get -y install tree
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get -y upgrade
          sudo -E apt-get clean
          df -h

      - name: Update feeds
        if: env.action_state == 'run' || ${{ github.event_name }}=='push'
        run: |
          cp ./feeds.conf.default ./lede/feeds.conf.default
          cd lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        if: env.action_state == 'run' || ${{ github.event_name }}=='push'
        run: |
          cp ${{ matrix.db-backend }}.defconfig lede/defconfig
          cd lede
          ls
          cat defconfig > .config
          make defconfig
          cat .config

      - name: Make download
        if: env.action_state == 'run' || ${{ github.event_name }}=='push'
        run: |
          ls
          cd lede
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        if: env.action_state == 'run' || ${{ github.event_name }}=='push'
        run: |
          ls
          cd lede
          make -j$(nproc) || make -j1 V=s
          echo "========================"
          echo "Space usage:"
          echo "========================"
          df -h
          echo "========================"
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Upload artifact targets
        if: env.action_state == 'run' || ${{ github.event_name }}=='push'
        uses: actions/upload-artifact@main
        with:
          name: OPENWRT-${{ matrix.db-backend }}-targets
          path: ./lede/bin/targets/

      - name: Upload artifact packages
        if: env.action_state == 'run'  || ${{ github.event_name }}=='push'
        uses: actions/upload-artifact@main
        with:
          name: OPENWRT-${{ matrix.db-backend }}-packages
          path: ./lede/bin/packages/

      - name: Upload release asset
        if: env.action_state == 'fail'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: $( find -type f -name "*rootfs.tar.gz" )
          tag: test
          file_glob: true

      - name: Push this source
        if: env.action_state == 'run' &&  matrix.db-backend == 'rpi2-3-4'
        run: |
          rm -rf lede
          echo "${{ secrets.GHB_KEY }}" >github.pem
          eval `ssh-agent`
          chmod 600 github.pem
          ssh-add github.pem
          mkdir -p ~/.ssh/
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          
          ls
          echo "============ git config ============"
          git config --global user.email ${GITHUB_EMAIL}
          git config --global user.name ${GITHUB_USER}
          echo "============ git commit ============"
          rm -rf github.pem
          if( ${{ github.event_name == 'push' }} );then
            git add -f .
            git commit --no-verify -m "Update md5" 
          else
            git add .
            git commit -m "Update md5" 
          fi
          echo "============ git push ============"
          git push
